name: ARM64 Pull and Save Docker Image with PHP 5.6.40

on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称 多个用英文逗号分开'
        required: true
        default: 'registry.uniontech.com/uos-server-base/uos-server-20-1070a:latest'  # 设置默认的 Docker 镜像列表

jobs:
  pull_and_package:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to UnionTech Registry
      if: contains(github.event.inputs.docker_images, 'registry.uniontech.com')
      uses: docker/login-action@v2
      with:
        registry: registry.uniontech.com
        username: ${{ secrets.UNIONTECH_REGISTRY_USERNAME }}
        password: ${{ secrets.UNIONTECH_REGISTRY_PASSWORD }}

    - name: Pull Docker Images and Package
      run: |
        images="${{ github.event.inputs.docker_images }}"
        IFS=',' read -r -a image_array <<< "$images"
        for image in "${image_array[@]}"; do
          echo "Pulling ${image}..."
          docker pull "${image}" --platform "linux/arm64"

          if [[ "${image}" == "registry.uniontech.com/uos-server-base/uos-server-20-1070a:latest" ]]; then
            echo "Installing PHP 5.6.40 in ${image}..."
            docker run --rm -it \
              --platform "linux/arm64" \
              -v $(pwd):/workspace \
              -w /workspace \
              "${image}" \
              bash -c " \
                yum update -y && \
                yum install -y epel-release && \
                yum install -y https://rpms.remirepo.net/enterprise/remi-release-7.rpm && \
                yum-config-manager --enable remi-php56 && \
                yum install -y php php-cli php-fpm php-mysql php-gd php-xml php-mbstring php-json && \
                php -v
              "
            # 重新标记镜像
            docker commit $(docker create "${image}") "${image}-php56"
            image="${image}-php56"
          fi

          echo "Saving ${image} as tar file..."
          docker save "${image}" -o "${image//\//_}-arm64.tar"
        done

    - name: Compress the TAR files
      run: tar -czf arm64-images.tar.gz *-arm64.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-images-tar
        path: arm64-images.tar.gz
        retention-days: 1  # 将保留天数设置为 1 天 最多可设置90天

    - name: Clean up intermediate files
      run: |
        rm *-arm64.tar
